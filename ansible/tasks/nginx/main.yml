---
- name: Install nginx
  apt:
    name: 
      - nginx
      - libnginx-mod-stream

- name: Setup sites-enabled/hashbang-http
  register: httpconf
  copy:
    dest: /etc/nginx/sites-enabled/hashbang-http
    content: |
      # Hashbang server configuration
      # ref: https://gist.github.com/RyanSquared/e59c7e274abef06e63b0e47e46997b00
      #
      map $http_upgrade $connection_upgrade {
        # An empty string indicates the header shouldn't be sent
        # causing the server to assume a keepalive (in HTTP/1.1)
        # See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
        default '';
        WebSocket upgrade;
      }

      server {
        listen 80;
        listen [::]:80;
      
        server_name "~^(?<user>[a-zA-Z0-9]+).{{ ansible_fqdn }}$";
      
        location / {
          proxy_pass http://unix:/home/$user/.nginx.sock;
          proxy_http_version 1.1;  # enable for keep-alive http support
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # websocket support
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
        }
      }

      server {
        listen 80;
        listen [::]:80;

        server_name "{{ ansible_fqdn }}";
        
        location /metrics {
          proxy_pass http://localhost:9100/metrics;
        }
      }

- name: Add SSL preread stream to nginx master config
  register: nginxconf
  blockinfile:
    path: /etc/nginx/nginx.conf
    marker: "# -- {mark} ANSIBLE MANAGED BLOCK -- ssl_preload blocks"
    block: |
      stream {
        map $ssl_preread_server_name $user_https {
           "~^(?<user>[a-zA-Z0-9]+).{{ ansible_fqdn }}$" unix:/home/$user/.nginx.https.sock;
        }

        server {
          listen 443;
          listen [::]:443;
          ssl_preread on;
          proxy_pass $user_https;
        }
      }

- name: Remove default nginx site
  file:
   state: absent
   path: /etc/nginx/sites-enabled/default

- name: Restart nginx
  when: nginxconf.changed or httpconf.changed
  service: name=nginx state=restarted enabled=yes
  ignore_errors: yes  # ignore error when systemd isn't running
